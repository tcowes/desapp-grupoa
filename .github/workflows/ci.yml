name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]
    types: [opened, synchronize]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission to gradlew
        run: chmod +x backend-desapp-api/gradlew

      - name: Initialize Gradle project (if not exists)
        run: backend-desapp-api/gradlew init --type kotlin-library

      - name: Build with Gradle
        run: backend-desapp-api/gradlew build

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission to gradlew
        run: chmod +x backend-desapp-api/gradlew

      - name: Initialize Gradle project (if not exists)
        run: backend-desapp-api/gradlew init --type kotlin-library

      - name: Run tests
        run: backend-desapp-api/gradlew test

  sonarcloud:
    needs: ["build", "test"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission to gradlew
        run: chmod +x backend-desapp-api/gradlew

      - name: Initialize Gradle project (if not exists)
        run: backend-desapp-api/gradlew init --type kotlin-library

      - name: SonarCloud analysis
        run: backend-desapp-api/gradlew build jacocoTestReport sonarqube --info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}